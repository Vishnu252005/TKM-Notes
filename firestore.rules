rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Events collection rules
    match /events/{eventId} {
      allow read: if true;  // Anyone can read events
      allow create: if request.auth != null;  // Only authenticated users can create events
      // Allow update if user is authenticated and is the creator of the event
      allow update: if request.auth != null && (
        resource.data.creatorId == request.auth.uid || // Creator can edit everything
        (!request.resource.data.diff(resource.data).affectedKeys().hasAny(['creatorId', 'title', 'description', 'type', 'date', 'location', 'price', 'points', 'capacity'])) // Others can only update registration-related fields
      );
      allow delete: if request.auth != null && resource.data.creatorId == request.auth.uid;  // Only creator can delete their event
      
      // Rules for registrations subcollection
      match /registrations/{registrationId} {
        allow read: if true;  // Anyone can read registrations
        allow create: if request.auth != null;  // Authenticated users can create registrations
        allow update: if request.auth != null && (
          get(/databases/$(database)/documents/events/$(eventId)).data.creatorId == request.auth.uid || // Event creator can update any registration
          registrationId == request.auth.uid  // Users can update their own registration
        );
        allow delete: if request.auth != null && (
          get(/databases/$(database)/documents/events/$(eventId)).data.creatorId == request.auth.uid || // Event creator can delete any registration
          registrationId == request.auth.uid  // Users can delete their own registration
        );
      }
    }
    
    // User collection rules
    match /users/{userId} {
      allow create: if request.auth != null;
      allow read, update: if request.auth != null && request.auth.uid == userId;
      
      // Rules for user's registrations subcollection
      match /registrations/{eventId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }
  }
} 